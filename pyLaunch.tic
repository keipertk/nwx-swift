
# Generated by stc version 0.8.2
# date                    : 2019/03/06 16:06:54
# Turbine version         : 1.2.3
# Input filename          : /home/kris/wf/demos/show/pyLaunch.swift
# Output filename         : /home/kris/wf/demos/show
# STC home                : /home/kris/.trunk/swift-t/stc
# Turbine home            : /home/kris/.trunk/swift-t/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : pyLaunch.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /home/kris/.trunk/swift-t/stc
# stc.turbine.version           : 1.2.3
# stc.turbine_home              : /home/kris/.trunk/swift-t/turbine
# stc.version                   : 0.8.2

# Metadata:

package require turbine 1.2.3
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_homekriswf
    turbine::allocate_custom c:s_homekriswf string 1 1 1 1
    turbine::store_string ${c:s_homekriswf} "/home/kris/wf/demos/rhf.py"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string c:s_homekriswf OPT_TEMPORARY
    global c:s_homekriswf
    # Var: int t:6 EXPR_TEMPORARY pyLaunch.swift:5:0
    # Var: string[int] u:arg pyLaunch.swift:4:0
    lassign [ adlb::multicreate [ list integer 0 1 2 ] [ list container integer string 1 1 3 ] ] t:6 u:arg
    turbine::c::log "allocated t:6=<${t:6}> u:arg=<${u:arg}>"
    turbine::array_kv_build ${u:arg} [ ::adlb::dict_create 0 "" ] 1 integer string
    turbine::launch_tcl [ list ${t:6} ] [ list ${c:s_homekriswf} ${u:arg} ]
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s_homekriswf" ""
adlb::add_debug_symbol 2 "__t:6" "pyLaunch:5:0"
adlb::add_debug_symbol 3 "arg" "pyLaunch:4:0"
turbine::start swift:main swift:constants
turbine::finalize
